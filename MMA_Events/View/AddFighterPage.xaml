<Page x:Class="MMA_Events.View.AddFighterPage"
      xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
      xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
      xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2"
      xmlns:local="clr-namespace:MMA_Events.View"
      xmlns:conv="clr-namespace:MMA_Events.Services"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="600"
      Title="AddFighterPage"
      >

    <Page.Resources>
        <conv:NicknameConverter x:Key="NicknameConverter"/>
        <Style x:Key="CustomComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" 
            BorderBrush="{TemplateBinding BorderBrush}" 
            BorderThickness="{TemplateBinding BorderThickness}" 
            Background="{TemplateBinding Background}" 
            Padding="{TemplateBinding Padding}" 
            SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                          SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#70090d"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFAF0E14"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FFAF0E14"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#70090d"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#70090d"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#70090d"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="Transparent" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="Transparent" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="Transparent" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="#FF262626" BorderBrush="#FF980B11" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="Transparent" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="CountryComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource CustomComboBoxItem}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Page.Resources>

    <Border>
        <Border.Background>
            <ImageBrush ImageSource="/Images/settingsWallpaper.jpg" AlignmentX="Center" Stretch="UniformToFill" >
                <ImageBrush.Transform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform/>
                        <TranslateTransform X="0"/>
                    </TransformGroup>
                </ImageBrush.Transform>
            </ImageBrush>
        </Border.Background>



        <Border
    BorderThickness="4"
        BorderBrush="{DynamicResource DynamicGradientBrush}"
        Background="{DynamicResource DynamicGradientBackground}">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="0.1*"></RowDefinition>
                    <RowDefinition Height="*"></RowDefinition>
                </Grid.RowDefinitions>

                <Grid Grid.Row="1">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"></ColumnDefinition>
                        <ColumnDefinition></ColumnDefinition>
                    </Grid.ColumnDefinitions>

                    <Grid Grid.Row="1">
                        <Button x:Name="bAddImage" Click="PickImageButton_Click" Background="red" BorderBrush="Transparent">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
Background="{TemplateBinding Background}"
                                            Opacity="0.1">
                                        <ContentPresenter HorizontalAlignment="Center" 
              VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Promijeni boju kada je miš iznad dugmeta -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="white"/>
                                            <!-- Zlatna boja -->
                                        </Trigger>

                                        <!-- Promijeni boju kada je dugme pritisnuto -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource panelOverColor}"/>
                                            <!-- Tamnocrvena boja -->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                        <Image x:Name="SelectedImage" Grid.Row="1" Grid.Column="0" VerticalAlignment="Bottom"/>
                        <Button 
                            Background="{DynamicResource panelOverColor}"
                            BorderBrush="Transparent" 
                            Foreground="{DynamicResource plainTextColor}"
                            x:Name="RePickImageButton" Content="{DynamicResource RepickImageButton}" HorizontalAlignment="Center" VerticalAlignment="Bottom" Width="100" Height="30" Click="RePickImageButton_Click" Visibility="Collapsed" FontFamily="Arial Black">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
Background="{TemplateBinding Background}"
CornerRadius="15">
                                        <ContentPresenter HorizontalAlignment="Center" 
              VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Promijeni boju kada je miš iznad dugmeta -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource panelOverColor}"/>
                                            <!-- Zlatna boja -->
                                        </Trigger>

                                        <!-- Promijeni boju kada je dugme pritisnuto -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource panelOverColor}"/>
                                            <!-- Tamnocrvena boja -->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                    </Grid>


                    <Grid Grid.Column="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition Height="0.3*"></RowDefinition>
                            <RowDefinition Height="30"></RowDefinition>
                            <RowDefinition Height="0.4*"></RowDefinition>
                            <RowDefinition Height="20"></RowDefinition>
                            <RowDefinition Height="*"></RowDefinition>
                            <RowDefinition Height="0.4*"></RowDefinition>
                        </Grid.RowDefinitions>

                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="10"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                                <RowDefinition Height="10"></RowDefinition>
                                <RowDefinition Height="*"></RowDefinition>
                            </Grid.RowDefinitions>

                            <Grid Grid.Row="0">
                                <TextBox x:Name="fieldUserNickname"
                                         TextChanged="OnFieldChanged"
                                 PreviewTextInput="OnlyText_PreviewTextInput" PreviewKeyDown="AllowControlKeys"
                        TextWrapping="Wrap" 
                        BorderBrush="#FFAF0E14" 
                        SelectionBrush="#FFAF0E14"
                        BorderThickness="0,0,0,1" 
                        Foreground="#FFEA3444" 
                        Padding="0,0,0,-5" 
                        SelectionTextBrush="{x:Null}" 
                        FontFamily="Arial Black" 
                         Margin="0,0,100,0"
                        FontSize="{DynamicResource ValueFontSize}"
                                         Background="Transparent"
                        CaretBrush="#FFEA3444"
                        VerticalContentAlignment="Center">

                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="TextBox">
                                                        <Border x:Name="border" 
                       Background="{TemplateBinding Background}" 
                       BorderBrush="{TemplateBinding BorderBrush}" 
                       BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ScrollViewer x:Name="PART_ContentHost"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Value="35">
                                                    <Setter Property="FontSize" Value="14"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Value="70">
                                                    <Setter Property="FontSize" Value="25"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                    </TextBox.Style>

                                </TextBox>
                                <TextBlock x:Name="NicknamePromptTextBlock" Grid.Row="1"
                                  Text="{DynamicResource FighterNickname}" 
                                  Foreground="Gray" 
                                  VerticalAlignment="Center" 
                                  HorizontalAlignment="Left" 
                                  IsHitTestVisible="False" Padding="0,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=fieldUserNickname}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>

                            <Grid Grid.Row="2">
                                <TextBox x:Name="fieldUserFullname"
                                         TextChanged="OnFieldChanged"
                                 PreviewTextInput="OnlyText_PreviewTextInput" PreviewKeyDown="AllowControlKeys"
                                 TextWrapping="Wrap" 
                                 BorderBrush="#FFAF0E14" 
                                 SelectionBrush="#f5f5f5"
                                 BorderThickness="0,0,0,1" 
                                 Foreground="#f5f5f5" 
                                 Padding="0,0,0,2" 
                                 SelectionTextBrush="{x:Null}" 
                                 FontFamily="Arial Black" 
                                  Margin="0,0,100,0"
                                FontSize="{DynamicResource NameFontSize}"
                                                  Background="Transparent"
                                 CaretBrush="#f5f5f5"
                                 VerticalContentAlignment="Center">

                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="TextBox">
                                                        <Border x:Name="border" 
                                                            Background="{TemplateBinding Background}" 
                                                            BorderBrush="{TemplateBinding BorderBrush}" 
                                                            BorderThickness="{TemplateBinding BorderThickness}">
                                                            <ScrollViewer x:Name="PART_ContentHost"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                            <Setter Property="FontSize" Value="14"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Value="35">
                                                    <Setter Property="FontSize" Value="14"/>
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding ActualHeight, RelativeSource={RelativeSource Self}}" Value="70">
                                                    <Setter Property="FontSize" Value="25"/>
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>

                                    </TextBox.Style>

                                </TextBox>
                                <TextBlock x:Name="FullNamePromptTextBlock" Grid.Row="1"
                                   Text="{DynamicResource FighterFullName}" 
                                   Foreground="Gray" 
                                   VerticalAlignment="Center" 
                                   HorizontalAlignment="Left" 
                                   IsHitTestVisible="False" Padding="0,0,0,0">
                                    <TextBlock.Style>
                                        <Style TargetType="{x:Type TextBlock}">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Text, ElementName=fieldUserFullname}" Value="">
                                                    <Setter Property="Visibility" Value="Visible" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </TextBlock.Style>
                                </TextBlock>
                            </Grid>
                            <Grid Grid.Row="4">
                                <TextBlock x:Name="tbfighterWeight" Grid.Row="4" Text="" FontSize="{DynamicResource ValueFontSize}" FontFamily="Arial Black" VerticalAlignment="Center">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="#828282" Opacity="1"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                            </Grid>
                        </Grid>

                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition Width="10"></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>

                            <Grid Grid.Column="0">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Margin="0,-10,0,0" Grid.Row="0" Text="{DynamicResource FighterWeight}" FontSize="{DynamicResource TypeFontSize}" FontFamily="Arial Black">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="#828282" Opacity="1"/>
                                    </TextBlock.Foreground>
                                </TextBlock>

                                <!--Width="{DynamicResource weightTextboxWidth}"-->
                                <Grid Grid.Row="1" >
                                    <TextBox TextChanged="getCategoryName" 
                                             PreviewTextInput="OnlyNumbersDotAndMinus_PreviewTextInput" PreviewKeyDown="AllowControlKeys"
                                        x:Name="fieldFighterWeight"
                                         Background="Transparent" 
                                         BorderBrush="#FF980B11" 
                                        
                                         CaretBrush="#FFAF0E14"
                                         BorderThickness="0, 0, 0, 1"
                                         FontSize="{DynamicResource ValueFontSize}"
                                         FontFamily="Arial Black"
                                         Foreground="#f5f5f5"
                                         HorizontalAlignment="Left"
                                          MinWidth="40"
                                         >
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="TextBox">
                                                            <Border x:Name="border" 
                                                                Background="{TemplateBinding Background}" 
                                                                BorderBrush="{TemplateBinding BorderBrush}" 
                                                                BorderThickness="{TemplateBinding BorderThickness}" >
                                                                <ScrollViewer x:Name="PART_ContentHost"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>

                                        </TextBox.Style>
                                    </TextBox>

                                    <TextBlock HorizontalAlignment="Center" Text="KG" FontSize="{DynamicResource ValueFontSize}" FontFamily="Arial Black" >
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="#f5f5f5" Opacity="1"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Grid>

                            </Grid>

                            <Grid Grid.Column="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Margin="0,-10,0,0" Grid.Row="0" Text="{DynamicResource FighterCountry}" FontSize="{DynamicResource TypeFontSize}" FontFamily="Arial Black">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="#828282" Opacity="1"/>
                                    </TextBlock.Foreground>
                                </TextBlock>

                                <ComboBox Style="{DynamicResource CountryComboBox}" x:Name="CountryComboBox" Grid.Row="1"
                                      BorderBrush = "#f5f5f5"
                                BorderThickness = "0,0,0,1"
Foreground="#f5f5f5"
                                         
                                Padding = "0,0,0,2"
                                FontFamily = "Arial "
                                VerticalContentAlignment = "Center" FontSize="{DynamicResource ValueFontSize}"
                                    ItemsSource="{Binding Countries}" 
                                    SelectedItem="{Binding SelectedCountry}"
                                    HorizontalContentAlignment="Stretch">
                                        <ComboBox.ItemContainerStyle>
                                            <Style TargetType="ComboBoxItem">
                                                <Style.Triggers>
                                                    <Trigger Property="IsSelected" Value="True">
                                                        <Setter Property="Visibility" Value="Collapsed"/>
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ComboBox.ItemContainerStyle>
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition Width="20" />
                                                    <ColumnDefinition Width="*" />
                                                </Grid.ColumnDefinitions>
                                                <Image x:Name="imgFlag" Source="{Binding FlagImage}" Width="20" Height="20" Grid.Column="0" HorizontalAlignment="Left"/>
                                                <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center"/>

                                            </Grid>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>  


                                </ComboBox>
                                <!--<TextBox Grid.Row="1"
                                         TextChanged="OnFieldChanged" 
                                          PreviewTextInput="OnlyText_PreviewTextInput" PreviewKeyDown="AllowControlKeys"
                                    x:Name="fieldFighterCountry"
                                     Background="Transparent" 
                                     BorderBrush="#FF980B11" 
    
                                     CaretBrush="#FFAF0E14"
                                     BorderThickness="0, 0, 0, 1"
                                     FontSize="{DynamicResource ValueFontSize}"
                                     FontFamily="Arial Black"
                                     Foreground="#f5f5f5"
                                     HorizontalAlignment="Left"
                                      MinWidth="80"
                                         Margin="0,0,30,0"
     >
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="TextBox">
                                                        <Border x:Name="border" 
                            Background="{TemplateBinding Background}" 
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}" >
                                                            <ScrollViewer x:Name="PART_ContentHost"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>

                                    </TextBox.Style>
                                </TextBox>-->
                            </Grid>
                            <Grid Grid.Column="4">
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Margin="0,-10,0,0" Grid.Row="0" Text="{DynamicResource FighterDob}" FontSize="{DynamicResource TypeFontSize}" FontFamily="Arial Black">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="#828282" Opacity="1"/>
                                    </TextBlock.Foreground>
                                </TextBlock>

                                <DatePicker  SelectedDateChanged="OnDateChanged" Style="{DynamicResource MaterialDesignDatePicker}" x:Name="fieldFighterBirthDate" Padding="0,0,0,0" Grid.Row="1" Foreground="white" FontSize="{DynamicResource ValueFontSize}" FontFamily="Arial" BorderBrush="#FF980B11">

                                </DatePicker>

                                <!--<TextBox Grid.Row="1"
                                         PreviewTextInput="OnlyNumbersDotAndMinus_PreviewTextInput" PreviewKeyDown="AllowControlKeys"
                               x:Name="fieldFighterBirthDate"
                                Background="Transparent" 
                                BorderBrush="#FF980B11" 
                                CaretBrush="#FFAF0E14"
                                BorderThickness="0, 0, 0, 1"
                                FontSize="{DynamicResource ValueFontSize}"
                                FontFamily="Arial Black"
                                Foreground="#f5f5f5"
                                HorizontalAlignment="Left"
                                 MinWidth="80"
                                    Margin="0,0,30,0"
>
                                    <TextBox.Style>
                                        <Style TargetType="TextBox">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="TextBox">
                                                        <Border x:Name="border" 
                       Background="{TemplateBinding Background}" 
                       BorderBrush="{TemplateBinding BorderBrush}" 
                       BorderThickness="{TemplateBinding BorderThickness}" >
                                                            <ScrollViewer x:Name="PART_ContentHost"/>
                                                        </Border>
                                                        <ControlTemplate.Triggers>
                                                            <Trigger Property="IsFocused" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                            <Trigger Property="IsMouseOver" Value="True">
                                                                <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                            </Trigger>
                                                        </ControlTemplate.Triggers>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>

                                    </TextBox.Style>
                                </TextBox>-->
                            </Grid>
                        </Grid>

                        <Grid Grid.Row="4">
                            <Grid>
                                <Grid.RowDefinitions>
                                    <RowDefinition></RowDefinition>
                                    <RowDefinition></RowDefinition>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="{DynamicResource FighterScore}" FontSize="{DynamicResource TypeFontSize}" FontFamily="Arial Black">
                                    <TextBlock.Foreground>
                                        <SolidColorBrush Color="#828282" Opacity="1"/>
                                    </TextBlock.Foreground>
                                </TextBlock>
                                <Grid Grid.Row="1">
                                    <TextBox TextChanged="OnFieldChanged" 
                                        PreviewTextInput="OnlyNumbersDotAndMinus_PreviewTextInput" PreviewKeyDown="AllowControlKeys"
             x:Name="fieldFighterScore"
              Background="Transparent" 
              BorderBrush="#FF980B11" 
             
              CaretBrush="#FFAF0E14"
              BorderThickness="0, 0, 0, 1"
              FontSize="{DynamicResource ValueFontSize}"
              FontFamily="Arial Black"
              Foreground="#f5f5f5"
              HorizontalAlignment="Left"
               MinWidth="70"
              >
                                        <TextBox.Style>
                                            <Style TargetType="TextBox">
                                                <Setter Property="Template">
                                                    <Setter.Value>
                                                        <ControlTemplate TargetType="TextBox">
                                                            <Border x:Name="border" 
                                     Background="{TemplateBinding Background}" 
                                     BorderBrush="{TemplateBinding BorderBrush}" 
                                     BorderThickness="{TemplateBinding BorderThickness}" >
                                                                <ScrollViewer x:Name="PART_ContentHost"/>
                                                            </Border>
                                                            <ControlTemplate.Triggers>
                                                                <Trigger Property="IsFocused" Value="True">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                </Trigger>
                                                                <Trigger Property="IsMouseOver" Value="True">
                                                                    <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                </Trigger>
                                                            </ControlTemplate.Triggers>
                                                        </ControlTemplate>
                                                    </Setter.Value>
                                                </Setter>
                                            </Style>

                                        </TextBox.Style>
                                    </TextBox>

                                    <TextBlock Padding="0,0,90,0" HorizontalAlignment="Center" Text="(W-L-D)" FontSize="{DynamicResource ValueFontSize}" FontFamily="Arial Black" >
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="#f5f5f5" Opacity="1"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Grid>



                            </Grid>
                        </Grid>

                        <Grid Grid.Row="6">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition></ColumnDefinition>
                                <ColumnDefinition></ColumnDefinition>
                            </Grid.ColumnDefinitions>
                            <Border BorderThickness="0,0,1,0" BorderBrush="#828282">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <Border Margin="20,0,20,0" BorderBrush="#FFEA3444" BorderThickness="0,0,0,1">
                                        <Grid>
                                            <TextBox TextChanged="OnFieldChanged" 
                                                PreviewTextInput="OnlyNumbers_PreviewTextInput" PreviewKeyDown="AllowControlKeys"
x:Name="fieldFighterKOs"
 Background="Transparent" 
 BorderBrush="#FF980B11" 

 CaretBrush="#FFAF0E14"
 BorderThickness="0, 0, 0, 1"
                                                Margin="0,-10,0,0"
                                                Padding="0,0,0,0"
 FontSize="{DynamicResource FinishNumFontSize}"
 FontFamily="Arial Black"
 Foreground="#f5f5f5"
 HorizontalAlignment="Center"
  MinWidth="40"
                                                
 >
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="TextBox">
                                                                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" >
                                                                        <ScrollViewer x:Name="PART_ContentHost"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsFocused" Value="True">
                                                                            <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>

                                                </TextBox.Style>
                                            </TextBox>

                                        </Grid>
                                    </Border>


                                    <TextBlock Grid.Row="1"  Text="{DynamicResource FighterKoWins}" FontSize="{DynamicResource TypeFontSize}" FontFamily="Arial Black" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="#f5f5f5" Opacity="1"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>
                                </Grid>
                            </Border>

                            <Border Grid.Column="1" BorderThickness="0,0,1,0" BorderBrush="#828282">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition></RowDefinition>
                                        <RowDefinition></RowDefinition>
                                    </Grid.RowDefinitions>

                                    <Border Margin="20,0,20,0" BorderBrush="#FFEA3444" BorderThickness="0,0,0,1">
                                        <Grid>
                                            <TextBox TextChanged="OnFieldChanged" 
                                                PreviewTextInput="OnlyNumbers_PreviewTextInput" PreviewKeyDown="AllowControlKeys"

x:Name="fieldFighterSubmissions"
 Background="Transparent" 
 BorderBrush="#FF980B11" 

 CaretBrush="#FFAF0E14"
 BorderThickness="0, 0, 0, 1"
                                                Margin="0,-10,0,0"
                                                Padding="0,0,0,0"
 FontSize="{DynamicResource FinishNumFontSize}"
 FontFamily="Arial Black"
 Foreground="#f5f5f5"
 HorizontalAlignment="Center"
  MinWidth="40"
 >
                                                <TextBox.Style>
                                                    <Style TargetType="TextBox">
                                                        <Setter Property="Template">
                                                            <Setter.Value>
                                                                <ControlTemplate TargetType="TextBox">
                                                                    <Border x:Name="border" 
                        Background="{TemplateBinding Background}" 
                        BorderBrush="{TemplateBinding BorderBrush}" 
                        BorderThickness="{TemplateBinding BorderThickness}" >
                                                                        <ScrollViewer x:Name="PART_ContentHost"/>
                                                                    </Border>
                                                                    <ControlTemplate.Triggers>
                                                                        <Trigger Property="IsFocused" Value="True">
                                                                            <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                        </Trigger>
                                                                        <Trigger Property="IsMouseOver" Value="True">
                                                                            <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                                        </Trigger>
                                                                    </ControlTemplate.Triggers>
                                                                </ControlTemplate>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </Style>

                                                </TextBox.Style>
                                            </TextBox>

                                        </Grid>
                                    </Border>


                                    <TextBlock Grid.Row="1" Text="{DynamicResource FighterSubmisionWins}" FontSize="{DynamicResource TypeFontSize}" FontFamily="Arial Black" TextWrapping="Wrap" HorizontalAlignment="Center" VerticalAlignment="Center">
                                        <TextBlock.Foreground>
                                            <SolidColorBrush Color="#f5f5f5" Opacity="1"/>
                                        </TextBlock.Foreground>
                                    </TextBlock>

                                    
                                </Grid>
                            </Border>

                        </Grid>
                        <Button 
                                        Grid.Row="7"
                            IsEnabled="False"
                            Background="{DynamicResource panelOverColor}"
                            BorderBrush="Transparent" 
                            Foreground="{DynamicResource plainTextColor}"
                            x:Name="bAddFighter" Content="{DynamicResource AddFighterButton}" HorizontalAlignment="Center" VerticalAlignment="Center" Width="100" Height="30" Click="AddFighter_Click" FontFamily="Arial Black">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
Background="{TemplateBinding Background}"
CornerRadius="15">
                                        <ContentPresenter HorizontalAlignment="Center" 
              VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Promijeni boju kada je miš iznad dugmeta -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource panelOverColor}"/>
                                            <!-- Zlatna boja -->
                                        </Trigger>
                                        <!-- Promijeni boju kada je dugme pritisnuto -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="{DynamicResource panelOverColor}"/>
                                            <!-- Tamnocrvena boja -->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>
                </Grid>
            </Grid>

        </Border>
    </Border>
</Page>
