<Window x:Class="MMA_Events.View.RegisterView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:MMA_Events.View"
        mc:Ignorable="d"
        Title="LoginView" Height="550" Width="800"
        MinHeight="550" MinWidth="800"
        WindowStyle="None"
        Background="Transparent"
        AllowsTransparency="True"
        WindowStartupLocation="CenterScreen"
        
    xmlns:theme="clr-namespace:Microsoft.Windows.Themes;assembly=PresentationFramework.Aero2">
    <Window.Resources>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" StrokeDashArray="1 2" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" SnapsToDevicePixels="true" StrokeThickness="1"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="TextBox.Static.Background" Color="#FFFFFFFF"/>
        <Style x:Key="CustomComboBoxItem" TargetType="{x:Type ComboBoxItem}">
            <Setter Property="SnapsToDevicePixels" Value="True"/>
            <Setter Property="Padding" Value="4,2"/>
            <Setter Property="HorizontalContentAlignment" Value="Left"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="Foreground" Value="White"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ComboBoxItem}">
                        <Border x:Name="Bd" 
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}" 
                Background="{TemplateBinding Background}" 
                Padding="{TemplateBinding Padding}" 
                SnapsToDevicePixels="true">
                            <ContentPresenter HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                              SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" 
                              VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsHighlighted" Value="true">
                                <Setter Property="Background" TargetName="Bd" Value="#70090d"/>
                                <Setter Property="Foreground" Value="White"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.GrayTextBrushKey}}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="ComboBoxEditableTextBox" TargetType="{x:Type TextBox}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="AllowDrop" Value="true"/>
            <Setter Property="MinWidth" Value="0"/>
            <Setter Property="MinHeight" Value="0"/>
            <Setter Property="FocusVisualStyle" Value="{x:Null}"/>
            <Setter Property="ScrollViewer.PanningMode" Value="VerticalFirst"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type TextBox}">
                        <ScrollViewer x:Name="PART_ContentHost" Background="Transparent" Focusable="false" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <LinearGradientBrush x:Key="ComboBox.Static.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Static.Border" Color="#FFAF0E14"/>
        <SolidColorBrush x:Key="ComboBox.Static.Glyph" Color="#FFAF0E14"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Border" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Static.Editable.Button.Border" Color="Transparent"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Border" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Glyph" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Border" Color="#70090d"/>
        <LinearGradientBrush x:Key="ComboBox.MouseOver.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.MouseOver.Editable.Button.Border" Color="#70090d"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Border" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Glyph" Color="#FF000000"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Border" Color="#70090d"/>
        <LinearGradientBrush x:Key="ComboBox.Pressed.Editable.Button.Background" EndPoint="0,1" StartPoint="0,0">
            <GradientStop Color="Transparent" Offset="0.0"/>
            <GradientStop Color="Transparent" Offset="1.0"/>
        </LinearGradientBrush>
        <SolidColorBrush x:Key="ComboBox.Pressed.Editable.Button.Border" Color="#70090d"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Border" Color="#FFD9D9D9"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Glyph" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Border" Color="#FFBFBFBF"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Background" Color="Transparent"/>
        <SolidColorBrush x:Key="ComboBox.Disabled.Editable.Button.Border" Color="Transparent"/>
        <Style x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
            <Setter Property="OverridesDefaultStyle" Value="true"/>
            <Setter Property="IsTabStop" Value="false"/>
            <Setter Property="Focusable" Value="false"/>
            <Setter Property="ClickMode" Value="Press"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ToggleButton}">
                        <Border x:Name="templateRoot" Background="{StaticResource ComboBox.Static.Background}" BorderBrush="{StaticResource ComboBox.Static.Border}" BorderThickness="{TemplateBinding BorderThickness}" SnapsToDevicePixels="true">
                            <Border x:Name="splitBorder" BorderBrush="Transparent" BorderThickness="1" HorizontalAlignment="Right" Margin="0" SnapsToDevicePixels="true" Width="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}">
                                <Path x:Name="arrow" Data="F1 M 0,0 L 2.667,2.66665 L 5.3334,0 L 5.3334,-1.78168 L 2.6667,0.88501 L0,-1.78168 L0,0 Z" Fill="{StaticResource ComboBox.Static.Glyph}" HorizontalAlignment="Center" Margin="0" VerticalAlignment="Center"/>
                            </Border>
                        </Border>
                        <ControlTemplate.Triggers>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Static.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Static.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.MouseOver.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsMouseOver, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.MouseOver.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.MouseOver.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Pressed.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsPressed, RelativeSource={RelativeSource Mode=Self}}" Value="true"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Pressed.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Pressed.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Fill" TargetName="arrow" Value="{StaticResource ComboBox.Disabled.Glyph}"/>
                            </Trigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="false"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Border}"/>
                            </MultiDataTrigger>
                            <MultiDataTrigger>
                                <MultiDataTrigger.Conditions>
                                    <Condition Binding="{Binding IsEnabled, RelativeSource={RelativeSource Mode=Self}}" Value="false"/>
                                    <Condition Binding="{Binding IsEditable, RelativeSource={RelativeSource AncestorType={x:Type ComboBox}}}" Value="true"/>
                                </MultiDataTrigger.Conditions>
                                <Setter Property="Background" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Background}"/>
                                <Setter Property="BorderBrush" TargetName="templateRoot" Value="{StaticResource ComboBox.Disabled.Editable.Border}"/>
                                <Setter Property="Background" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Background}"/>
                                <Setter Property="BorderBrush" TargetName="splitBorder" Value="{StaticResource ComboBox.Disabled.Editable.Button.Border}"/>
                            </MultiDataTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>

        <ControlTemplate x:Key="ComboBoxEditableTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, RelativeSource={RelativeSource Mode=TemplatedParent}}" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="Transparent" BorderBrush="{DynamicResource {x:Static SystemColors.WindowFrameBrushKey}}" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="Transparent" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <Border x:Name="border" Background="Transparent" Margin="{TemplateBinding BorderThickness}">
                    <TextBox x:Name="PART_EditableTextBox" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" IsReadOnly="{Binding IsReadOnly, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="{TemplateBinding Padding}" Style="{StaticResource ComboBoxEditableTextBox}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                </Border>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="IsEnabled" Value="false">
                    <Setter Property="Opacity" TargetName="border" Value="0.56"/>
                </Trigger>
                <Trigger Property="IsKeyboardFocusWithin" Value="true">
                    <Setter Property="Foreground" Value="Black"/>
                </Trigger>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>

        <ControlTemplate x:Key="ComboBoxTemplate" TargetType="{x:Type ComboBox}">
            <Grid x:Name="templateRoot" SnapsToDevicePixels="true">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition MinWidth="{DynamicResource {x:Static SystemParameters.VerticalScrollBarWidthKey}}" Width="0"/>
                </Grid.ColumnDefinitions>
                <Popup x:Name="PART_Popup" AllowsTransparency="true" Grid.ColumnSpan="2" IsOpen="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Margin="1" Placement="Bottom" PopupAnimation="{DynamicResource {x:Static SystemParameters.ComboBoxPopupAnimationKey}}">
                    <theme:SystemDropShadowChrome x:Name="shadow" Color="Transparent" MinWidth="{Binding ActualWidth, ElementName=templateRoot}" MaxHeight="{TemplateBinding MaxDropDownHeight}">
                        <Border x:Name="dropDownBorder" Background="#FF262626" BorderBrush="#FF980B11" BorderThickness="1">
                            <ScrollViewer x:Name="DropDownScrollViewer">
                                <Grid x:Name="grid" RenderOptions.ClearTypeHint="Enabled">
                                    <Canvas x:Name="canvas" HorizontalAlignment="Left" Height="0" VerticalAlignment="Top" Width="0">
                                        <Rectangle x:Name="opaqueRect" Fill="Transparent" Height="{Binding ActualHeight, ElementName=dropDownBorder}" Width="{Binding ActualWidth, ElementName=dropDownBorder}"/>
                                    </Canvas>
                                    <ItemsPresenter x:Name="ItemsPresenter" KeyboardNavigation.DirectionalNavigation="Contained" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                                </Grid>
                            </ScrollViewer>
                        </Border>
                    </theme:SystemDropShadowChrome>
                </Popup>
                <ToggleButton x:Name="toggleButton" Background="{TemplateBinding Background}" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Grid.ColumnSpan="2" IsChecked="{Binding IsDropDownOpen, Mode=TwoWay, RelativeSource={RelativeSource Mode=TemplatedParent}}" Style="{StaticResource ComboBoxToggleButton}"/>
                <ContentPresenter x:Name="contentPresenter" ContentStringFormat="{TemplateBinding SelectionBoxItemStringFormat}" ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}" Content="{TemplateBinding SelectionBoxItem}" ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" IsHitTestVisible="false" Margin="{TemplateBinding Padding}" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
            </Grid>
            <ControlTemplate.Triggers>
                <Trigger Property="HasDropShadow" SourceName="PART_Popup" Value="true">
                    <Setter Property="Margin" TargetName="shadow" Value="0,0,5,5"/>
                    <Setter Property="Color" TargetName="shadow" Value="#71000000"/>
                </Trigger>
                <Trigger Property="HasItems" Value="false">
                    <Setter Property="Height" TargetName="dropDownBorder" Value="95"/>
                </Trigger>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsGrouping" Value="true"/>
                        <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                    </MultiTrigger.Conditions>
                    <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                </MultiTrigger>
                <Trigger Property="ScrollViewer.CanContentScroll" SourceName="DropDownScrollViewer" Value="false">
                    <Setter Property="Canvas.Top" TargetName="opaqueRect" Value="{Binding VerticalOffset, ElementName=DropDownScrollViewer}"/>
                    <Setter Property="Canvas.Left" TargetName="opaqueRect" Value="{Binding HorizontalOffset, ElementName=DropDownScrollViewer}"/>
                </Trigger>
            </ControlTemplate.Triggers>
        </ControlTemplate>
        <Style x:Key="CountryComboBox" TargetType="{x:Type ComboBox}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource ComboBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ComboBox.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.WindowTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Hidden"/>
            <Setter Property="Padding" Value="6,3,5,3"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="Template" Value="{StaticResource ComboBoxTemplate}"/>
            <Setter Property="ItemContainerStyle" Value="{StaticResource CustomComboBoxItem}"/>
            <Style.Triggers>
                <Trigger Property="IsEditable" Value="true">
                    <Setter Property="IsTabStop" Value="false"/>
                    <Setter Property="Padding" Value="2"/>
                    <Setter Property="Template" Value="{StaticResource ComboBoxEditableTemplate}"/>
                </Trigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Border>
        <Border.Background>
            <ImageBrush ImageSource="/Images/wallpaper.jpg" AlignmentX="Center" Stretch="UniformToFill" >
                <ImageBrush.Transform>
                    <TransformGroup>
                        <ScaleTransform ScaleX="1" ScaleY="1" CenterX="0"/>
                        <SkewTransform CenterX="0"/>
                        <RotateTransform CenterX="0"/>
                        <TranslateTransform X="0"/>
                    </TransformGroup>
                </ImageBrush.Transform>
            </ImageBrush>
        </Border.Background>

        <Border
        BorderThickness="4">
            <Border.Background>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0" Opacity="0.95">
                    <GradientStop Color="#FF262626"/>
                    <GradientStop Color="#FF313131" Offset="1"/>
                    <GradientStop Color="#FF262626"/>
                    <GradientStop Color="#FF262626"/>
                </LinearGradientBrush>
            </Border.Background>
            <Border.BorderBrush>
                <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                    <GradientStop Color="#FF980B11"/>
                    <GradientStop Color="#FFF34251" Offset="1"/>
                </LinearGradientBrush>
            </Border.BorderBrush>

            <Grid ClipToBounds="True">
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" MinHeight="0"/>
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <Grid Grid.Row="0" Grid.Column="1">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="0.7*" MinHeight="0"/>
                        <RowDefinition Height="*" MinHeight="0"/>
                        <RowDefinition Height="*" MinHeight="0"/>
                        <RowDefinition Height="*" MinHeight="0"/>
                        <RowDefinition Height="*" MinHeight="0"/>
                        <RowDefinition Height="*" MinHeight="0"/>
                        <RowDefinition Height="*" MinHeight="0"/>
                        <RowDefinition Height="*" MinHeight="0"/>
                        <RowDefinition Height="0.5*" MinHeight="0"/>
                    </Grid.RowDefinitions>


                    <Grid Grid.Row="0" Grid.Column="2">
                        <!-- Dugme za fullscreen -->
                        <Button Grid.Column="2" Grid.Row="0"
                            x:Name="FullscreenButton"
        Background="#FFAF0E14" 
        BorderBrush="{x:Null}" 
        Foreground="#FF262626" 
        FontFamily="Arial Black" 
                            Click="FullscreenButton_Click"
            
            HorizontalAlignment="Right" 
                            
                VerticalAlignment="Top"
            FontSize="14" Width="50" Height="30" Margin="0,10,80,0">
                            <Rectangle Width="12" Height="12" Stroke="#FF262626" StrokeThickness="3"/>
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
Background="{TemplateBinding Background}" 
BorderBrush="{TemplateBinding BorderBrush}" 
BorderThickness="{TemplateBinding BorderThickness}" 
CornerRadius="15">
                                        <!-- Zaobljenje rubova -->
                                        <ContentPresenter HorizontalAlignment="Center" 
              VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Promijeni boju kada je miš iznad dugmeta -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#910c11"/>
                                            <!-- Zlatna boja -->
                                        </Trigger>

                                        <!-- Promijeni boju kada je dugme pritisnuto -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#70090d"/>
                                            <!-- Tamnocrvena boja -->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <!-- Dugme za exit -->
                        <Button Content="X" Grid.Column="2" Grid.Row="0"
                            x:Name="ExitButton"
        Background="#FFAF0E14" 
        BorderBrush="{x:Null}" 
        Foreground="#FF262626" 
        FontFamily="Arial Black" 
                            Click="ExitButton_Click"
            
            HorizontalAlignment="Right" 
                            
                VerticalAlignment="Top"
            FontSize="14" Width="50" Height="30" Margin="0,10,25,0">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
Background="{TemplateBinding Background}" 
BorderBrush="{TemplateBinding BorderBrush}" 
BorderThickness="{TemplateBinding BorderThickness}" 
CornerRadius="15">
                                        <!-- Zaobljenje rubova -->
                                        <ContentPresenter HorizontalAlignment="Center" 
              VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Promijeni boju kada je miš iznad dugmeta -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#910c11"/>
                                            <!-- Zlatna boja -->
                                        </Trigger>

                                        <!-- Promijeni boju kada je dugme pritisnuto -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#70090d"/>
                                            <!-- Tamnocrvena boja -->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>

                    <!--Right grid-->

                    <Grid Margin="30,0,90,0" Grid.Row="1">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*" MinHeight="35"/>
                            <RowDefinition Height="*" MaxHeight="8"/>
                        </Grid.RowDefinitions>

                        <TextBox x:Name = "userNameField" Grid.Row="1"
TextWrapping = "Wrap"
BorderBrush = "#FFAF0E14"
SelectionBrush = "#FFAF0E14"
BorderThickness = "0,0,0,3"
Foreground = "#FFAF0E14"
Padding = "30,0,0,2"
SelectionTextBrush = "{x:Null}"
FontFamily = "Arial"
CaretBrush = "#FFAF0E14"
VerticalContentAlignment = "Center" FontSize = "16" >
                            <TextBox.Style >
                                <Style TargetType = "{x:Type TextBox}" >
                                    <Setter Property = "Template" >
                                        <Setter.Value >
                                            <ControlTemplate TargetType = "{x:Type TextBox}" >
                                                <Border x:Name = "border"
                       Background = "{TemplateBinding Background}"
                       BorderBrush = "{TemplateBinding BorderBrush}"
                       BorderThickness = "{TemplateBinding BorderThickness}"
                       CornerRadius = "2" >
                                                    <ScrollViewer x:Name = "PART_ContentHost" />
                                                </Border >
                                                <ControlTemplate.Triggers >
                                                    <Trigger Property = "IsFocused" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                    <Trigger Property = "IsMouseOver" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                </ControlTemplate.Triggers >
                                            </ControlTemplate >
                                        </Setter.Value >
                                    </Setter >
                                </Style >
                            </TextBox.Style >
                            <TextBox.Background >
                                <ImageBrush ImageSource = "../Images/userIcon.png" Stretch = "Uniform" AlignmentX = "Left" >
                                    <ImageBrush.RelativeTransform >
                                        <TransformGroup >
                                            <ScaleTransform CenterY = "0" CenterX = "0" ScaleX = "0.8" ScaleY = "0.8" />
                                            <SkewTransform CenterX = "0" CenterY = "0" />
                                            <RotateTransform Angle = "0" CenterX = "0" CenterY = "0" />
                                            <TranslateTransform X = "0" />
                                        </TransformGroup >
                                    </ImageBrush.RelativeTransform >

                                </ImageBrush >
                            </TextBox.Background >
                        </TextBox  >
                        <TextBlock x:Name = "NamePromptTextBlock" Grid.Row="1"
  Text = "Name"
  Foreground = "Gray"
  VerticalAlignment = "Center"
  HorizontalAlignment = "Left"
  IsHitTestVisible = "False" Padding="30,0,0,3" >
                            <TextBlock.Style >
                                <Style TargetType = "{x:Type TextBlock}" >
                                    <Setter Property = "Visibility" Value = "Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding = "{Binding Text, ElementName=userNameField}" Value = "" >
                                            <Setter Property = "Visibility" Value = "Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <Grid Margin="30,0,90,0" Grid.Row="2">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*" MinHeight="35"/>
                            <RowDefinition Height="*" MaxHeight="8"/>
                        </Grid.RowDefinitions>

                        <TextBox x:Name = "userSurnameField" Grid.Row="1"
TextWrapping = "Wrap"
BorderBrush = "#FFAF0E14"
SelectionBrush = "#FFAF0E14"
BorderThickness = "0,0,0,3"
Foreground = "#FFAF0E14"
Padding = "30,0,0,2"
SelectionTextBrush = "{x:Null}"
FontFamily = "Arial"
CaretBrush = "#FFAF0E14"
VerticalContentAlignment = "Center" FontSize = "16" >
                            <TextBox.Style >
                                <Style TargetType = "{x:Type TextBox}" >
                                    <Setter Property = "Template" >
                                        <Setter.Value >
                                            <ControlTemplate TargetType = "{x:Type TextBox}" >
                                                <Border x:Name = "border"
                       Background = "{TemplateBinding Background}"
                       BorderBrush = "{TemplateBinding BorderBrush}"
                       BorderThickness = "{TemplateBinding BorderThickness}"
                       CornerRadius = "2" >
                                                    <ScrollViewer x:Name = "PART_ContentHost" />
                                                </Border >
                                                <ControlTemplate.Triggers >
                                                    <Trigger Property = "IsFocused" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                    <Trigger Property = "IsMouseOver" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                </ControlTemplate.Triggers >
                                            </ControlTemplate >
                                        </Setter.Value >
                                    </Setter >
                                </Style >
                            </TextBox.Style >
                            <TextBox.Background >
                                <ImageBrush ImageSource = "../Images/userIcon.png" Stretch = "Uniform" AlignmentX = "Left" >
                                    <ImageBrush.RelativeTransform >
                                        <TransformGroup >
                                            <ScaleTransform CenterY = "0" CenterX = "0" ScaleX = "0.8" ScaleY = "0.8" />
                                            <SkewTransform CenterX = "0" CenterY = "0" />
                                            <RotateTransform Angle = "0" CenterX = "0" CenterY = "0" />
                                            <TranslateTransform X = "0" />
                                        </TransformGroup >
                                    </ImageBrush.RelativeTransform >

                                </ImageBrush >
                            </TextBox.Background >
                        </TextBox  >
                        <TextBlock x:Name = "SurnamePromptTextBlock" Grid.Row="1"
  Text = "Surname"
  Foreground = "Gray"
  VerticalAlignment = "Center"
  HorizontalAlignment = "Left"
  IsHitTestVisible = "False" Padding="30,0,0,3" >
                            <TextBlock.Style >
                                <Style TargetType = "{x:Type TextBlock}" >
                                    <Setter Property = "Visibility" Value = "Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding = "{Binding Text, ElementName=userSurnameField}" Value = "" >
                                            <Setter Property = "Visibility" Value = "Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>

                    <Grid Margin="30,0,90,0" Grid.Row="3">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*" MinHeight="35"/>
                            <RowDefinition Height="*" MaxHeight="8"/>
                        </Grid.RowDefinitions>

                        <TextBox x:Name = "userEmailField" Grid.Row="1"
TextWrapping = "Wrap"
BorderBrush = "#FFAF0E14"
SelectionBrush = "#FFAF0E14"
BorderThickness = "0,0,0,3"
Foreground = "#FFAF0E14"
Padding = "30,0,0,2"
SelectionTextBrush = "{x:Null}"
FontFamily = "Arial"
CaretBrush = "#FFAF0E14"
VerticalContentAlignment = "Center" FontSize = "16" >
                            <TextBox.Style >
                                <Style TargetType = "{x:Type TextBox}" >
                                    <Setter Property = "Template" >
                                        <Setter.Value >
                                            <ControlTemplate TargetType = "{x:Type TextBox}" >
                                                <Border x:Name = "border"
                       Background = "{TemplateBinding Background}"
                       BorderBrush = "{TemplateBinding BorderBrush}"
                       BorderThickness = "{TemplateBinding BorderThickness}"
                       CornerRadius = "2" >
                                                    <ScrollViewer x:Name = "PART_ContentHost" />
                                                </Border >
                                                <ControlTemplate.Triggers >
                                                    <Trigger Property = "IsFocused" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                    <Trigger Property = "IsMouseOver" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                </ControlTemplate.Triggers >
                                            </ControlTemplate >
                                        </Setter.Value >
                                    </Setter >
                                </Style >
                            </TextBox.Style >
                            <TextBox.Background >
                                <ImageBrush ImageSource = "../Images/mailIcon.png" Stretch = "Uniform" AlignmentX = "Left">
                                    <ImageBrush.RelativeTransform >
                                        <TransformGroup >
                                            <ScaleTransform CenterY = "0" CenterX = "0" ScaleX = "0.8" ScaleY = "0.8" />
                                            <SkewTransform CenterX = "0" CenterY = "0" />
                                            <RotateTransform Angle = "0" CenterX = "0" CenterY = "0" />
                                            <TranslateTransform X = "0" />
                                        </TransformGroup >
                                    </ImageBrush.RelativeTransform >

                                </ImageBrush >
                            </TextBox.Background >
                        </TextBox  >
                        <TextBlock x:Name = "EmailPromptTextBlock" Grid.Row="1"
  Text = "Email"
  Foreground = "Gray"
  VerticalAlignment = "Center"
  HorizontalAlignment = "Left"
  IsHitTestVisible = "False" Padding="30,0,0,3" >
                            <TextBlock.Style >
                                <Style TargetType = "{x:Type TextBlock}" >
                                    <Setter Property = "Visibility" Value = "Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding = "{Binding Text, ElementName=userEmailField}" Value = "" >
                                            <Setter Property = "Visibility" Value = "Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>
                    </Grid>


                    <Grid Margin="30,0,90,0" Grid.Row="4">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                            <RowDefinition Height="*" MinHeight="35"/>
                            <RowDefinition Height="*" MaxHeight="8"/>
                        </Grid.RowDefinitions>

                        <ComboBox Style="{DynamicResource CountryComboBox}" x:Name="CountryComboBox" Grid.Row="1"
                                  BorderBrush = "#FFAF0E14"
                    BorderThickness = "0,0,0,3"
                    Foreground = "#FFAF0E14"
                    Padding = "50,0,0,2"
                    FontFamily = "Arial"
                    VerticalContentAlignment = "Center" FontSize = "20"
                              ItemsSource="{Binding Countries}" 
                              SelectedItem="{Binding SelectedCountry}"
                              HorizontalContentAlignment="Stretch">
                            <ComboBox.ItemContainerStyle>
                                <Style TargetType="ComboBoxItem">
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.ItemContainerStyle>
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="30" />
                                            <ColumnDefinition Width="*" />
                                        </Grid.ColumnDefinitions>
                                        <Image x:Name="imgFlag" Source="{Binding FlagImage}" Width="30" Height="20" Grid.Column="0" HorizontalAlignment="Left"/>
                                        <TextBlock Text="{Binding Name}" Grid.Column="1" VerticalAlignment="Center"/>

                                    </Grid>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                            
                            
                        </ComboBox>
                        <Image x:Name="countryIcon"  Grid.Row="1" HorizontalAlignment="Left" Source="/Images/countryIcon.png" Margin="0,0,0,5"></Image>
                        <!--<TextBox x:Name = "userCountryField" Grid.Row="1"
TextWrapping = "Wrap"
BorderBrush = "#FFAF0E14"
SelectionBrush = "#FFAF0E14"
BorderThickness = "0,0,0,3"
Foreground = "#FFAF0E14"
Padding = "30,0,0,2"
SelectionTextBrush = "{x:Null}"
FontFamily = "Arial"
CaretBrush = "#FFAF0E14"
VerticalContentAlignment = "Center" FontSize = "16" >
                            <TextBox.Style >
                                <Style TargetType = "{x:Type TextBox}" >
                                    <Setter Property = "Template" >
                                        <Setter.Value >
                                            <ControlTemplate TargetType = "{x:Type TextBox}" >
                                                <Border x:Name = "border"
                       Background = "{TemplateBinding Background}"
                       BorderBrush = "{TemplateBinding BorderBrush}"
                       BorderThickness = "{TemplateBinding BorderThickness}"
                       CornerRadius = "2" >
                                                    <ScrollViewer x:Name = "PART_ContentHost" />
                                                </Border >
                                                <ControlTemplate.Triggers >
                                                    <Trigger Property = "IsFocused" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                    <Trigger Property = "IsMouseOver" Value = "True" >
                                                        <Setter TargetName = "border" Property = "BorderBrush" Value = "#FFAF0E14" />
                                                    </Trigger >
                                                </ControlTemplate.Triggers >
                                            </ControlTemplate >
                                        </Setter.Value >
                                    </Setter >
                                </Style >
                            </TextBox.Style >
                            <TextBox.Background >
                                <ImageBrush ImageSource = "../Images/countryIcon.png" Stretch = "Uniform" AlignmentX = "Left" >
                                    <ImageBrush.RelativeTransform >
                                        <TransformGroup >
                                            <ScaleTransform CenterY = "0" CenterX = "0" ScaleX = "0.8" ScaleY = "0.8" />
                                            <SkewTransform CenterX = "0" CenterY = "0" />
                                            <RotateTransform Angle = "0" CenterX = "0" CenterY = "0" />
                                            <TranslateTransform X = "0" />
                                        </TransformGroup >
                                    </ImageBrush.RelativeTransform >

                                </ImageBrush >
                            </TextBox.Background >
                        </TextBox  >
                        <TextBlock x:Name = "CountryPromptTextBlock" Grid.Row="1"
  Text = "Country"
  Foreground = "Gray"
  VerticalAlignment = "Center"
  HorizontalAlignment = "Left"
  IsHitTestVisible = "False" Padding="30,0,0,3" >
                            <TextBlock.Style >
                                <Style TargetType = "{x:Type TextBlock}" >
                                    <Setter Property = "Visibility" Value = "Collapsed" />
                                    <Style.Triggers>
                                        <DataTrigger Binding = "{Binding Text, ElementName=userCountryField}" Value = "" >
                                            <Setter Property = "Visibility" Value = "Visible" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </TextBlock.Style>
                        </TextBlock>-->
                    </Grid>

                    <Grid Margin="30,0,90,0" Grid.Row="5">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" MinHeight="35"/>
                            <RowDefinition Height="*" MaxHeight="8"/>
                        </Grid.RowDefinitions>
                        <PasswordBox x:Name="userPassField" Grid.Row="1"
    BorderBrush="#FFAF0E14" 
    SelectionBrush="#FFAF0E14"
    BorderThickness="0,0,0,3" 
    Foreground="#FFAF0E14" 
    Padding="30,0,0,2" 
    SelectionTextBrush="{x:Null}" 
    FontFamily="Arial" 
    CaretBrush="#FFAF0E14" 
                 PasswordChanged="userPass_PasswordChanged"

    VerticalContentAlignment="Center" Height="NaN">

                            <PasswordBox.Style>
                                <Style TargetType="PasswordBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="PasswordBox">
                                                <Border x:Name="border" 
    Background="{TemplateBinding Background}" 
    BorderBrush="{TemplateBinding BorderBrush}" 
    BorderThickness="{TemplateBinding BorderThickness}" 
    CornerRadius="2">
                                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </PasswordBox.Style>

                            <PasswordBox.Background>
                                <ImageBrush ImageSource="../Images/passicon.png" Stretch="Uniform" AlignmentX="Left">
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0" CenterX="0" ScaleX="0.8" ScaleY="0.8"/>
                                            <SkewTransform CenterX="0" CenterY="0"/>
                                            <RotateTransform Angle="0" CenterX="0" CenterY="0"/>
                                            <TranslateTransform X="0"/>
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>

                                </ImageBrush>
                            </PasswordBox.Background>

                        </PasswordBox>
                        <TextBlock x:Name="PassPromptTextBlock" Grid.Row="1"
     Text="Password" 
     Foreground="Gray" 
     VerticalAlignment="Center" 
     HorizontalAlignment="Left" 
     IsHitTestVisible="False" Padding="30,3,0,0">
                        </TextBlock>
                    </Grid>

                    <Grid Margin="30,0,90,0" Grid.Row="6">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" MinHeight="35"/>
                            <RowDefinition Height="*" MaxHeight="8"/>
                        </Grid.RowDefinitions>
                        <PasswordBox x:Name="userConfirmPassField" Grid.Row="1"
BorderBrush="#FFAF0E14" 
SelectionBrush="#FFAF0E14"
BorderThickness="0,0,0,3" 
Foreground="#FFAF0E14" 
Padding="30,0,0,2" 
SelectionTextBrush="{x:Null}" 
FontFamily="Arial" 
CaretBrush="#FFAF0E14" 
             PasswordChanged="userConfirmPass_PasswordChanged"

VerticalContentAlignment="Center" Height="NaN">

                            <PasswordBox.Style>
                                <Style TargetType="PasswordBox">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="PasswordBox">
                                                <Border x:Name="border" 
Background="{TemplateBinding Background}" 
BorderBrush="{TemplateBinding BorderBrush}" 
BorderThickness="{TemplateBinding BorderThickness}" 
CornerRadius="2">
                                                    <ScrollViewer x:Name="PART_ContentHost"/>
                                                </Border>
                                                <ControlTemplate.Triggers>
                                                    <Trigger Property="IsFocused" Value="True">
                                                        <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter TargetName="border" Property="BorderBrush" Value="#FFAF0E14"/>
                                                    </Trigger>
                                                </ControlTemplate.Triggers>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </PasswordBox.Style>

                            <PasswordBox.Background>
                                <ImageBrush ImageSource="../Images/passicon.png" Stretch="Uniform" AlignmentX="Left">
                                    <ImageBrush.RelativeTransform>
                                        <TransformGroup>
                                            <ScaleTransform CenterY="0" CenterX="0" ScaleX="0.8" ScaleY="0.8"/>
                                            <SkewTransform CenterX="0" CenterY="0"/>
                                            <RotateTransform Angle="0" CenterX="0" CenterY="0"/>
                                            <TranslateTransform X="0"/>
                                        </TransformGroup>
                                    </ImageBrush.RelativeTransform>

                                </ImageBrush>
                            </PasswordBox.Background>

                        </PasswordBox>
                        <TextBlock x:Name="ConfirmPassPromptTextBlock" Grid.Row="1"
 Text="Password" 
 Foreground="Gray" 
 VerticalAlignment="Center" 
 HorizontalAlignment="Left" 
 IsHitTestVisible="False" Padding="30,3,0,0">
                        </TextBlock>
                    </Grid>

                    <Grid Margin="30,0,90,0" Grid.Row="7">

                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="*" MinHeight="35"/>
                            <RowDefinition Height="*" MaxHeight="8"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                            <ColumnDefinition Width="0.2*"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>

                        <Button Content="Login" Grid.Column="0" Grid.Row="1"
Background="#FFAF0E14" 
BorderBrush="{x:Null}" 
Foreground="#FF262626" 
FontFamily="Arial Black" 
FontSize="16"
            Click="BtnLogin_Click"
            >

                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
Background="{TemplateBinding Background}" 
BorderBrush="{TemplateBinding BorderBrush}" 
BorderThickness="{TemplateBinding BorderThickness}" 
CornerRadius="18">
                                        <!-- Zaobljenje rubova -->
                                        <ContentPresenter HorizontalAlignment="Center" 
              VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#910c11"/>
                                        </Trigger>

                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#70090d"/>

                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>

                        <Button Content="Register" Grid.Column="1" Grid.Row="1"
        Background="#FFAF0E14" 
        BorderBrush="{x:Null}" 
        Foreground="#FF262626" 
        FontFamily="Arial Black" 
            
            Margin="20,0,10,0"
            FontSize="16" Grid.ColumnSpan="2" Click="Button_Click">
                            <Button.Template>
                                <ControlTemplate TargetType="Button">
                                    <Border x:Name="border" 
Background="{TemplateBinding Background}" 
BorderBrush="{TemplateBinding BorderBrush}" 
BorderThickness="{TemplateBinding BorderThickness}" 
CornerRadius="18">
                                        <!-- Zaobljenje rubova -->
                                        <ContentPresenter HorizontalAlignment="Center" 
              VerticalAlignment="Center"/>
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <!-- Promijeni boju kada je miš iznad dugmeta -->
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#910c11"/>
                                            <!-- Zlatna boja -->
                                        </Trigger>

                                        <!-- Promijeni boju kada je dugme pritisnuto -->
                                        <Trigger Property="IsPressed" Value="True">
                                            <Setter TargetName="border" Property="Background" Value="#70090d"/>
                                            <!-- Tamnocrvena boja -->
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Button.Template>
                        </Button>
                    </Grid>


                </Grid>

                <Grid Grid.Row="0" Grid.Column="0">

                    <Rectangle StrokeThickness = "10" RenderTransformOrigin = "0.35,0" Height="42" Width="416" Grid.RowSpan="1" >
                        <Rectangle.Stroke>
                            <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0" >
                                <GradientStop Color = "#FFCE0000" />
                                <GradientStop Color = "#FFCE2A2A" Offset = "1" />
                            </LinearGradientBrush>
                        </Rectangle.Stroke>
                        <Rectangle.RenderTransform >
                            <TransformGroup >
                                <ScaleTransform ScaleX="5" ScaleY="1.45" />
                                <SkewTransform />
                                <RotateTransform Angle = "54.219" />
                                <TranslateTransform />
                            </TransformGroup >
                        </Rectangle.RenderTransform >
                    </Rectangle >

                    <Rectangle Height = "10" StrokeThickness = "15" RenderTransformOrigin = "0,0" >
                        <Rectangle.Stroke>
                            <LinearGradientBrush EndPoint = "0.5,1" StartPoint = "0.5,0" >
                                <GradientStop Color = "#FFCE0000" />
                                <GradientStop Color = "#FFCE2A2A" Offset = "1" />
                            </LinearGradientBrush >
                        </Rectangle.Stroke >
                        <Rectangle.RenderTransform >
                            <TransformGroup >
                                <ScaleTransform />
                                <SkewTransform />
                                <RotateTransform Angle = "52.431" />
                                <TranslateTransform />
                            </TransformGroup >
                        </Rectangle.RenderTransform >
                    </Rectangle >
                    <Image Source = "../Images/registerLogo.png" RenderTransformOrigin = "0.5,0.5" Margin = "-91,-12,-56,-12" >
                        <Image.RenderTransform >
                            <TransformGroup >
                                <ScaleTransform ScaleX = "-1" />
                                <SkewTransform />
                                <RotateTransform />
                                <TranslateTransform />
                            </TransformGroup >
                        </Image.RenderTransform >
                    </Image>
                </Grid>
            </Grid>
        </Border>
    </Border>
</Window>
